name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10"]
        exclude:
          # Exclude combinations that might be problematic
          - os: windows-latest
            python-version: 3.8

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Install HDL tools (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y iverilog yosys graphviz
          # For ModelSim Starter Edition
          wget https://download.altera.com/akdlm/software/acdsinst/20.1std.1/720/ib_installers/ModelSimSetup-20.1.1.720-linux.run
          chmod +x ModelSimSetup-20.1.1.720-linux.run
          ./ModelSimSetup-20.1.1.720-linux.run --mode unattended --accept_eula 1

      - name: Install HDL tools (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install icarus-verilog yosys graphviz

      - name: Install HDL tools (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          # Install IcarusVerilog and Graphviz
          choco install iverilog
          choco install graphviz

      - name: Code Quality
        continue-on-error: true # Add this line to continue even if pylint fails
        run: |
          black --check hdlopt/
          pylint hdlopt/
          flake8 hdlopt/
          mypy hdlopt/

      - name: Run tests
        run: |
          pytest hdlopt/tests -v --cov=hdlopt

      - name: Upload coverage
        uses: codecov/codecov-action@v3

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Build documentation
        run: |
          cd docs/
          make html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          personal_token: ${{ secrets.WIKI_ACCESS_TOKEN }}
          publish_dir: ./docs/_build/html
